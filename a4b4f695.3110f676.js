(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var i=n(3),r=n(7),o=(n(0),n(88)),a={id:"import",title:"Import",sidebar_label:"Import"},p={unversionedId:"import",id:"import",isDocsHomePage:!1,title:"Import",description:"Any class that implements the IImportRequestable interface is eligible to be processed by the import service in Dime.Scheduler.",source:"@site/docs\\import.md",slug:"/import",permalink:"/ds-sdk/docs/import",editUrl:"https://github.com/dimenics/ds-sdk/edit/master/docs/docs/import.md",version:"current",sidebar_label:"Import",sidebar:"someSidebar",previous:{title:"Dime.Scheduler .NET SDK",permalink:"/ds-sdk/docs/"},next:{title:"Validation",permalink:"/ds-sdk/docs/validation"}},c=[],s={toc:c};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Any class that implements the ",Object(o.b)("inlineCode",{parentName:"p"},"IImportRequestable")," interface is eligible to be processed by the import service in Dime.Scheduler."),Object(o.b)("p",null,"This example adds or updates a category:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-csharp"},'using Dime.Scheduler.Sdk.Import;\n\nstring uri = "http://mydimescheduler.com";\nIAuthenticator authenticator = new FormsAuthenticator(uri, "admin", "admin");\n\nDimeSchedulerClient client = new(uri, authenticator);\n\nCategory category = new("Category #1", "#6e62b5");\nIImportEndpoint importEndpoint = await client.Import.Request();\nawait importEndpoint.RunAsync(category, TransactionType.Append);\n')),Object(o.b)("p",null,"This example adds or updates a filter group:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-csharp"},'using Dime.Scheduler.Sdk.Import;\n\nstring uri = "http://mydimescheduler.com";\nIAuthenticator authenticator = new FormsAuthenticator(uri, "admin", "admin");\n\nDimeSchedulerClient client = new(uri, authenticator);\n\nFilterGroup filterGroup = new FilterGroup { Name = "Group 1" };\nIImportEndpoint importEndpoint = await client.Import.Request();\nawait importEndpoint.RunAsync(filterGroup, TransactionType.Append);\n')))}d.isMDXComponent=!0}}]);